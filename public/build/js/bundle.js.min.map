{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","json","console","log","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","obtenerHorasDisponibles","id","horaSeleccionada","onclick","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","appendChild","noResultados","mostrarPonentes","obtenerPonente","ponenteDOM","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function () {\n    const horas = document.querySelector('#horas')\n\n    if (horas) {\n        const categoria = document.querySelector('[name=\"categoria_id\"]')\n        const dias = document.querySelectorAll('[name=\"dia\"]');\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\n\n        categoria.addEventListener('change', terminoBusqueda)\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda))\n\n\n        let busqueda = {\n            categoria_id: +categoria.value || '',\n            dia: +inputHiddenDia.value || ''\n        }\n\n\n        if (!Object.values(busqueda).includes('')) {\n            (async () => {\n                await buscarEventos();\n\n                const id = inputHiddenHora.value;\n\n                // Resaltar la hora actual\n                const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`)\n                horaSeleccionada.classList.remove('horas__hora--deshabilitada')\n                horaSeleccionada.classList.add('horas__hora--seleccionada')\n\n                horaSeleccionada.onclick = seleccionarHora;\n            })()\n        }\n\n        function terminoBusqueda(e) {\n            busqueda[e.target.name] = e.target.value;\n\n            // Reiniciar los campos ocultos y el selector de horas\n            inputHiddenHora.value = '';\n            inputHiddenDia.value = '';\n\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\n            if (horaPrevia) {\n                horaPrevia.classList.remove('horas__hora--seleccionada')\n            }\n\n            if (Object.values(busqueda).includes('')) {\n                return\n            }\n\n            buscarEventos();\n        }\n\n        async function buscarEventos() {\n            const { dia, categoria_id } = busqueda\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\n            const resultado = await fetch(url);\n            const eventos = await resultado.json();\n            console.log(eventos);\n            obtenerHorasDisponibles(eventos);\n        }\n\n        function obtenerHorasDisponibles(eventos) {\n            // Reiniciar las horas\n            const listadoHoras = document.querySelectorAll('#horas li');\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'))\n\n            // Comprobar eventos ya tomados, y quitar la variable de deshabilitado\n            const horasTomadas = eventos.map(evento => evento.hora_id);\n            const listadoHorasArray = Array.from(listadoHoras);\n\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'))\n\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\n            horasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));\n        }\n\n        function seleccionarHora(e) {\n            // Deshabilitar la hora previa, si hay un nuevo click\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\n            if (horaPrevia) {\n                horaPrevia.classList.remove('horas__hora--seleccionada')\n            }\n\n            // Agregar clase de seleccionado\n            e.target.classList.add('horas__hora--seleccionada')\n\n            inputHiddenHora.value = e.target.dataset.horaId\n\n            // Llenar el campo oculto de dia\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value\n        }\n    }\n\n})();","(function() {\n    const ponentesInput = document.querySelector('#ponentes');\n\n    if(ponentesInput) {\n        let ponentes = [];\n        let ponentesFiltrados = [];\n\n        const listadoPonentes = document.querySelector('#listado-ponentes')\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]')\n\n        obtenerPonentes();\n        ponentesInput.addEventListener('input', buscarPonentes)\n\n        if(ponenteHidden.value) {\n           (async() => {\n                const ponente = await obtenerPonente(ponenteHidden.value)\n                const { nombre, apellido} = ponente\n\n                // Insertar en el HTML\n                const ponenteDOM = document.createElement('LI');\n                ponenteDOM.classList.add('listado-ponentes__ponente', 'listado-ponentes__ponente--seleccionado');\n                ponenteDOM.textContent = `${nombre} ${apellido}`\n\n                listadoPonentes.appendChild(ponenteDOM)\n           })()\n        }\n\n        async function obtenerPonentes() {\n            const url = `/api/ponentes`;\n            const respuesta = await fetch(url);\n            const resultado = await respuesta.json();\n            formatearPonentes(resultado)\n        }\n\n        async function obtenerPonente(id) {\n            const url = `/api/ponente?id=${id}`;\n            const respuesta = await fetch(url)\n            const resultado = await respuesta.json()\n            return resultado;\n        }\n\n        function formatearPonentes(arrayPonentes = []) {\n            ponentes = arrayPonentes.map( ponente => {\n                return {\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\n                    id: ponente.id\n                } \n            })\n        }\n\n        function buscarPonentes(e) {\n            const busqueda = e.target.value;\n\n            if(busqueda.length > 3) {\n                const expresion = new RegExp(busqueda, \"i\");\n                ponentesFiltrados = ponentes.filter(ponente => {\n                    if(ponente.nombre.toLowerCase().search(expresion) != -1) {\n                        return ponente\n                    }\n                })\n            } else {\n                ponentesFiltrados = []\n            }\n\n            mostrarPonentes();\n        }\n\n        function mostrarPonentes() {\n\n            while(listadoPonentes.firstChild) {\n                listadoPonentes.removeChild(listadoPonentes.firstChild)\n            }\n\n            if(ponentesFiltrados.length > 0) {\n                ponentesFiltrados.forEach(ponente => {\n                    const ponenteHTML = document.createElement('LI');\n                    ponenteHTML.classList.add('listado-ponentes__ponente')\n                    ponenteHTML.textContent = ponente.nombre;\n                    ponenteHTML.dataset.ponenteId = ponente.id\n                    ponenteHTML.onclick = seleccionarPonente\n\n                    // Añadir al dom\n                    listadoPonentes.appendChild(ponenteHTML)\n                })\n            } else {\n                const noResultados = document.createElement('P')\n                noResultados.classList.add('listado-ponentes__no-resultado')\n                noResultados.textContent = 'No hay resultados para tu búsqueda'\n                listadoPonentes.appendChild(noResultados)              \n            }\n        }\n\n        function seleccionarPonente(e) {\n            const ponente = e.target;\n\n            // Remover la clase previa\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado')\n            if(ponentePrevio) {\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado')\n            }\n            ponente.classList.add('listado-ponentes__ponente--seleccionado')\n\n            ponenteHidden.value = ponente.dataset.ponenteId\n        }\n    }\n})();","(function () {\r\n\r\n  const tagsInput = document.querySelector('#tags_input')\r\n\r\n  if (tagsInput) {\r\n\r\n    const tagsDiv = document.querySelector('#tags');\r\n    const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n\r\n    let tags = [];\r\n\r\n    //Recuperar inforomacion de redes\r\n    if (tagsInputHidden.value !== '') {\r\n      tags = tagsInputHidden.value.split(',');\r\n      mostrarTags();\r\n    }\r\n\r\n    tagsInput.addEventListener('keypress', guardarTag)\r\n\r\n    function guardarTag(e) {\r\n      if (e.keyCode === 44) {\r\n        e.preventDefault();\r\n\r\n        if (e.target.value.trim() === \"\" || e.target.value.length < 1) {\r\n          return;\r\n        }\r\n\r\n        tags = [...tags, e.target.value.trim()];\r\n\r\n        tagsInput.value = \"\";\r\n\r\n        mostrarTags();\r\n      }\r\n    }\r\n\r\n    function mostrarTags() {\r\n      tagsDiv.textContent = '';\r\n      tags.forEach(tag => {\r\n        const etiqueta = document.createElement('LI');\r\n        etiqueta.classList.add('formulario__tag')\r\n        etiqueta.textContent = tag;\r\n        etiqueta.ondblclick = eliminarTag\r\n        tagsDiv.appendChild(etiqueta)\r\n      })\r\n      actualizarInputHidden();\r\n    }\r\n\r\n    function eliminarTag(e) {\r\n      e.target.remove()\r\n      tags = tags.filter(tag => tag !== e.target.textContent)\r\n      actualizarInputHidden();\r\n    }\r\n\r\n    function actualizarInputHidden() {\r\n      tagsInputHidden.value = tags.toString();\r\n    }\r\n\r\n\r\n  }\r\n})()"]}